-- UIManager.lua
local UI = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local UICorner = Instance.new("UICorner")

UI.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
MainFrame.Size = UDim2.new(0, 300, 0, 400)
MainFrame.Position = UDim2.new(0.5, -150, 0.5, -200)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
UICorner.Parent = MainFrame
MainFrame.Parent = UI

local settings = {}  -- Table pour stocker les états des toggles et les inputs

-- Fonction pour créer une catégorie (tab)
local function CreateTab(title, image)
    local TabFrame = Instance.new("Frame")
    TabFrame.Size = UDim2.new(1, 0, 1, 0)
    TabFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)

    local TabLabel = Instance.new("TextLabel")
    TabLabel.Size = UDim2.new(1, 0, 0, 30)
    TabLabel.Text = title
    TabLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TabLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    TabLabel.Parent = TabFrame

    TabFrame.Parent = MainFrame

    return {
        CreateToggle = function(params)
            local ToggleFrame = Instance.new("Frame")
            ToggleFrame.Size = UDim2.new(1, 0, 0, 30)
            ToggleFrame.Position = UDim2.new(0, 0, 0, params.PosY)
            ToggleFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            ToggleFrame.Parent = TabFrame

            local ToggleLabel = Instance.new("TextLabel")
            ToggleLabel.Size = UDim2.new(0.5, 0, 1, 0)
            ToggleLabel.Text = params.Name
            ToggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            ToggleLabel.Parent = ToggleFrame

            local ToggleButton = Instance.new("TextButton")
            ToggleButton.Size = UDim2.new(0.5, 0, 1, 0)
            ToggleButton.Position = UDim2.new(0.5, 0, 0, 0)
            ToggleButton.Text = "Off"
            ToggleButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
            ToggleButton.Parent = ToggleFrame

            ToggleButton.MouseButton1Click:Connect(function()
                local isActive = settings[params.Flag] or false
                isActive = not isActive
                settings[params.Flag] = isActive
                ToggleButton.Text = isActive and "On" or "Off"
                ToggleButton.BackgroundColor3 = isActive and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(100, 100, 100)
                params.Callback(isActive)
            end)
        end,

        CreateInput = function(params)
            local InputFrame = Instance.new("Frame")
            InputFrame.Size = UDim2.new(1, 0, 0, 30)
            InputFrame.Position = UDim2.new(0, 0, 0, params.PosY)
            InputFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            InputFrame.Parent = TabFrame

            local InputLabel = Instance.new("TextLabel")
            InputLabel.Size = UDim2.new(0.5, 0, 1, 0)
            InputLabel.Text = params.Name
            InputLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            InputLabel.Parent = InputFrame

            local InputBox = Instance.new("TextBox")
            InputBox.Size = UDim2.new(0.5, 0, 1, 0)
            InputBox.Position = UDim2.new(0.5, 0, 0, 0)
            InputBox.PlaceholderText = params.PlaceholderText
            InputBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            InputBox.Parent = InputFrame

            InputBox.FocusLost:Connect(function(enterPressed)
                if enterPressed then
                    local text = InputBox.Text
                    settings[params.Flag] = text
                    params.Callback(text)
                    if params.RemoveTextAfterFocusLost then
                        InputBox.Text = ""
                    end
                end
            end)
        end
    }
end

-- Fonctionnalité de glissement et autres codes ici...

print("UI Loaded By Individu Facility")
return {
    CreateTab = CreateTab -- Assurez-vous de retourner cette fonction
}
print("ciyciy")
