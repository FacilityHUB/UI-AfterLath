local module{}

local CoreGui = game:GetService("CoreGui")
local ScreenGui = Instance.new("ScreenGui")
local UserInputService = game:GetService("UserInputService")

ScreenGui.Parent = CoreGui
ScreenGui.Name = "Facility"

local Container = Instance.new("Frame")
Container.Name = "Container"
Container.Size = UDim2.new(0.35, 0, 0.40, 0)
Container.Position = UDim2.new(0.3, 0, 0.39, 0)
Container.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Container.BackgroundTransparency = 1
Container.Parent = ScreenGui

local NavBar = Instance.new("Frame")
NavBar.Name = "NavBar"
NavBar.Size = UDim2.new(0.24, 0, 0.8, 0)
NavBar.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
NavBar.Position = UDim2.new(0, 0, 0, 0)
NavBar.Parent = Container

local NavBarCorner = Instance.new("UICorner")
NavBarCorner.Parent = NavBar

local NavStroke = Instance.new("UIStroke")
NavStroke.Color = Color3.fromRGB(18, 29, 232)
NavStroke.Thickness = 1
NavStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
NavStroke.Parent = NavBar

local layout = Instance.new("UIListLayout")
layout.Parent = NavBar
layout.Padding = UDim.new(0, 10)
layout.HorizontalAlignment = "Center"

local EnHaut = Instance.new("Frame")
EnHaut.Name = "EnHaut"
EnHaut.Size = UDim2.new(1, 0, 0.1, 0)
EnHaut.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
EnHaut.Position = UDim2.new(0, 0, 0, -50)
EnHaut.Parent = Container

local EnHautCorner = Instance.new("UICorner")
EnHautCorner.Parent = EnHaut

local HautStroke = Instance.new("UIStroke")
HautStroke.Color = Color3.fromRGB(18, 29, 232)
HautStroke.Thickness = 1
HautStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
HautStroke.Parent = EnHaut

local TitleScript = Instance.new("TextLabel")
TitleScript.Name = "Title"
TitleScript.Text = "Facility HUB"
TitleScript.Size = UDim2.new(0, 150, 0, 25)
TitleScript.TextColor3 = Color3.fromRGB(141, 141, 141)
TitleScript.BackgroundTransparency = 1
TitleScript.Font = Enum.Font.SourceSansBold
TitleScript.TextXAlignment = Enum.TextXAlignment.Left
TitleScript.TextScaled = true
TitleScript.Position = UDim2.new(0, 10, 0, 8)

TitleScript.Parent = EnHaut

local function toggleUI()
	ScreenGui.Enabled = not ScreenGui.Enabled
end

UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
	if input.UserInputType == Enum.UserInputType.Keyboard and not gameProcessedEvent then
		if input.KeyCode == Enum.KeyCode.LeftControl or input.KeyCode == Enum.KeyCode.RightControl then
			toggleUI()
		end
	end
end)

UserInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.Keyboard then
		if input.KeyCode == Enum.KeyCode.LeftControl or input.KeyCode == Enum.KeyCode.RightControl then
		end
	end
end)

local dragging = false
local dragStart = nil
local startPos = nil

local function updateInput(input)
	local delta = input.Position - dragStart
	Container.Position =
		UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

EnHaut.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = Container.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
		updateInput(input)
	end
end)

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0.75, 0, 0.8, 0)
MainFrame.Position = UDim2.new(0, 168, 0, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
MainFrame.Parent = Container

local MainFrameCorner = Instance.new("UICorner")
MainFrameCorner.Parent = MainFrame

local MainStroke = Instance.new("UIStroke")
MainStroke.Color = Color3.fromRGB(18, 29, 232)
MainStroke.Thickness = 1
MainStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
MainStroke.Parent = MainFrame

local Element = Instance.new("Frame")
Element.Name = "Element"
Element.Size = UDim2.new(1, 0, 1, 0)
Element.Position = UDim2.new(0, 0, 0, 0)
Element.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Element.Parent = MainFrame

local ElementCorner = Instance.new("UICorner")
ElementCorner.Parent = Element

function Module.CreateTab(title)
	local ButtonContainer = Instance.new("Frame")
	ButtonContainer.Name = title
	ButtonContainer.Size = UDim2.new(0, 125, 0, 30)
	ButtonContainer.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	ButtonContainer.BackgroundTransparency = 1
	ButtonContainer.Position = UDim2.new(0.05 + (#NavBar:GetChildren() - 1) * 0.22, 0, 0.1, 0)
	ButtonContainer.Parent = NavBar

	local ContainerCorner = Instance.new("UICorner")
	ContainerCorner.Parent = ButtonContainer

	local Button = Instance.new("TextButton")
	Button.Size = UDim2.new(1, 0, 0, 35)
	Button.Position = UDim2.new(0, 0, 0, 10)
	Button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	Button.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button.Text = title
	Button.Parent = ButtonContainer

	local ButtonCorner = Instance.new("UICorner")
	ButtonCorner.Parent = Button

	local ButtonStroke = Instance.new("UIStroke")
	ButtonStroke.Color = Color3.fromRGB(18, 29, 232)
	ButtonStroke.Thickness = 1
	ButtonStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	ButtonStroke.Parent = Button

	Button.MouseButton1Click:Connect(function()
		print(title .. " clicked!")
		for _, child in ipairs(Element:GetChildren()) do
			if child:IsA("ScrollingFrame") then
				child.Visible = false
			end
		end

		local correspondingFrame = Element:FindFirstChild(title)
		if correspondingFrame then
			correspondingFrame.Visible = true
		end
	end)

	local TabFrame = Instance.new("ScrollingFrame")
	TabFrame.Name = title
	TabFrame.Size = UDim2.new(0.95, 0, 0.95, 0)
	TabFrame.Position = UDim2.new(0.025, 0, 0.025, 0)
	TabFrame.BackgroundTransparency = 1
	TabFrame.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	TabFrame.Visible = false
	TabFrame.Parent = Element

	TabFrame.ScrollBarThickness = 10
	TabFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
	TabFrame.ScrollingDirection = Enum.ScrollingDirection.Y
	TabFrame.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar

	local TabFrameCorner = Instance.new("UICorner")
	TabFrameCorner.Parent = TabFrame

	local uiPadding = Instance.new("UIPadding")
	uiPadding.PaddingTop = UDim.new(0, 10)
	uiPadding.PaddingLeft = UDim.new(0, 10)
	uiPadding.PaddingRight = UDim.new(0, 10)
	uiPadding.PaddingBottom = UDim.new(0, 10)
	uiPadding.Parent = TabFrame

	local listLayout = Instance.new("UIListLayout")
	listLayout.Parent = TabFrame
	listLayout.FillDirection = Enum.FillDirection.Vertical
	listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	listLayout.VerticalAlignment = Enum.VerticalAlignment.Top
	listLayout.SortOrder = Enum.SortOrder.LayoutOrder
	listLayout.Padding = UDim.new(0, 10)

	return {
		ButtonContainer = ButtonContainer,
		TabFrame = TabFrame,
		CreateToggle = function(toggleOptions)
			local ToggleFrame = Instance.new("Frame")
			ToggleFrame.Name = "Toggle"
			ToggleFrame.Position = UDim2.new(0, 2, 0, 5)
			ToggleFrame.Size = UDim2.new(0.99, 0, 0, 40)
			ToggleFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
			ToggleFrame.Parent = TabFrame

			local ToggleCorner = Instance.new("UICorner")
			ToggleCorner.Parent = ToggleFrame

			local ButtonStroke = Instance.new("UIStroke")
			ButtonStroke.Color = Color3.fromRGB(18, 29, 232)
			ButtonStroke.Thickness = 1
			ButtonStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
			ButtonStroke.Parent = ToggleFrame

			local ToggleLabel = Instance.new("TextLabel")
			ToggleLabel.Size = UDim2.new(0, 385, 0, 18)
			ToggleLabel.Position = UDim2.new(0, 10, 0, 10)
			ToggleLabel.TextSize = 14
			ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left
			ToggleLabel.BackgroundTransparency = 1
			ToggleLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
			ToggleLabel.TextScaled = true
			ToggleLabel.Text = toggleOptions.Name
			ToggleLabel.Parent = ToggleFrame

			local Switch = Instance.new("Frame")
			Switch.Name = "Switch"
			Switch.Size = UDim2.new(0, 43, 0, 21)
			Switch.Position = UDim2.new(0.88, 0, 0, 10)
			Switch.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
			Switch.Parent = ToggleFrame

			local SwitchCorner = Instance.new("UICorner")
			SwitchCorner.Parent = Switch

			local SwitchStroke = Instance.new("UIStroke")
			SwitchStroke.Color = Color3.fromRGB(18, 29, 232)
			SwitchStroke.Parent = Switch

			local Indicator = Instance.new("Frame")
			Indicator.Name = "Indicator"
			Indicator.Size = UDim2.new(0, 17, 0, 17)
			Indicator.Position = UDim2.new(0, 0.05, 0, 2)
			Indicator.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
			Indicator.Parent = Switch

			local IndicatorCorner = Instance.new("UICorner")
			IndicatorCorner.Parent = Indicator

			local IndicatorStroke = Instance.new("UIStroke")
			IndicatorStroke.Parent = Indicator

			local ToggleButton = Instance.new("TextButton")
			ToggleButton.Size = UDim2.new(4, 0, 1.1, 0)
			ToggleButton.Position = UDim2.new(0, -120, 0, 0)
			ToggleButton.BackgroundTransparency = 1
			ToggleButton.Text = ""
			ToggleButton.Parent = Switch

			ToggleButton.MouseButton1Click:Connect(function()
				local newValue = not toggleOptions.CurrentValue
				toggleOptions.CurrentValue = newValue
				if newValue then
					Indicator:TweenPosition(UDim2.new(0, 22, 0, 2), "Out", "Quad", 0.2)
				else
					Indicator:TweenPosition(UDim2.new(0, 0.05, 0, 2), "Out", "Quad", 0.2)
				end
				toggleOptions.Callback(newValue)
			end)
		end,

		CreateSlider = function(sliderOptions)
			local SliderFrame = Instance.new("Frame")
			SliderFrame.Name = sliderOptions.Name
			SliderFrame.Position = UDim2.new(0, 2, 0, 5)
			SliderFrame.Size = UDim2.new(0.99, 0, 0, 40)
			SliderFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
			SliderFrame.Parent = TabFrame

			local SliderFrameCorner = Instance.new("UICorner")
			SliderFrameCorner.Parent = SliderFrame

			local SliderStroke = Instance.new("UIStroke")
			SliderStroke.Color = Color3.fromRGB(18, 29, 232)
			SliderStroke.Thickness = 1
			SliderStroke.Parent = SliderFrame

			local SliderLabel = Instance.new("TextLabel")
			SliderLabel.Size = UDim2.new(0, 385, 0, 18)
			SliderLabel.Position = UDim2.new(0, 10, 0, 10)
			SliderLabel.TextSize = 14
			SliderLabel.TextXAlignment = Enum.TextXAlignment.Left
			SliderLabel.BackgroundTransparency = 1
			SliderLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
			SliderLabel.TextScaled = true
			SliderLabel.Text = sliderOptions.Name
			SliderLabel.Parent = SliderFrame

			local SliderValueLabel = Instance.new("TextLabel")
			SliderValueLabel.Size = UDim2.new(0, 50, 0, 20)
			SliderValueLabel.Position = UDim2.new(0, 160, 0, 10)
			SliderValueLabel.Text = tostring(sliderOptions.CurrentValue)
			SliderValueLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
			SliderValueLabel.TextSize = 12
			SliderValueLabel.TextScaled = true
			SliderValueLabel.BackgroundTransparency = 1
			SliderValueLabel.TextXAlignment = Enum.TextXAlignment.Right
			SliderValueLabel.Parent = SliderFrame

			local SliderBar = Instance.new("Frame")
			SliderBar.Name = "Fond"
			SliderBar.Size = UDim2.new(0, 200, 0, 20)
			SliderBar.Position = UDim2.new(0, 240, 0, 10)
			SliderBar.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
			SliderBar.Parent = SliderFrame

			local SliderBarCorner = Instance.new("UICorner")
			SliderBarCorner.Parent = SliderBar

			local FillFrame = Instance.new("Frame")
			FillFrame.Name = "Fill"
			FillFrame.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
			FillFrame.Position = UDim2.new(0, 0, 0, 0)
			FillFrame.Size = UDim2.new(0, 0, 1, 0)
			FillFrame.Parent = SliderBar

			local FillCorner = Instance.new("UICorner")
			FillCorner.Parent = FillFrame

			local SliderButton = Instance.new("TextButton")
			SliderButton.Name = "SliderButton"
			SliderButton.Size = UDim2.new(1, 0, 1, 0)
			SliderButton.Position = UDim2.new(0, 0, 0, 0)
			SliderButton.BackgroundTransparency = 1
			SliderButton.Text = ""
			SliderButton.Parent = SliderBar

			local dragging = false

			SliderButton.MouseButton1Down:Connect(function()
				dragging = true
			end)

			UserInputService.InputEnded:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = false
				end
			end)

			SliderButton.MouseMoved:Connect(function(x, y)
				if dragging then
					local mousePosition = x
					local sliderPosition = SliderBar.AbsolutePosition.X
					local sliderSize = SliderBar.AbsoluteSize.X

					local newValue = math.clamp((mousePosition - sliderPosition) / sliderSize, 0, 1)
					local sliderValue = math.floor(
						newValue * (sliderOptions.Range[2] - sliderOptions.Range[1]) / sliderOptions.Increment
					) * sliderOptions.Increment + sliderOptions.Range[1]
					sliderOptions.CurrentValue = sliderValue

					SliderValueLabel.Text = tostring(sliderValue)

					FillFrame.Size = UDim2.new(newValue, 0, 1, 0)

					if sliderOptions.Callback then
						sliderOptions.Callback(sliderValue)
					end
				end
			end)

			SliderButton.MouseButton1Click:Connect(function()
				local mousePosition = UserInputService:GetMouseLocation().X
				local sliderPosition = SliderBar.AbsolutePosition.X
				local sliderSize = SliderBar.AbsoluteSize.X

				local newValue = math.clamp((mousePosition - sliderPosition) / sliderSize, 0, 1)
				local sliderValue = math.floor(
					newValue * (sliderOptions.Range[2] - sliderOptions.Range[1]) / sliderOptions.Increment
				) * sliderOptions.Increment + sliderOptions.Range[1]
				sliderOptions.CurrentValue = sliderValue

				SliderValueLabel.Text = tostring(sliderValue)

				FillFrame.Size = UDim2.new(newValue, 0, 1, 0)

				if sliderOptions.Callback then
					sliderOptions.Callback(sliderValue)
				end
			end)
		end,

		CreateKeybind = function(keybindOptions)
			local KeybindFrame = Instance.new("Frame")
			KeybindFrame.Name = keybindOptions.Name
			KeybindFrame.Position = UDim2.new(0, 2, 0, 5)
			KeybindFrame.Size = UDim2.new(0.99, 0, 0, 40)
			KeybindFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
			KeybindFrame.Parent = TabFrame

			local KeybindCorner = Instance.new("UICorner")
			KeybindCorner.Parent = KeybindFrame

			local KeybindStroke = Instance.new("UIStroke")
			KeybindStroke.Color = Color3.fromRGB(18, 29, 232)
			KeybindStroke.Thickness = 1
			KeybindStroke.Parent = KeybindFrame

			local KeybindLabel = Instance.new("TextLabel")
			KeybindLabel.Size = UDim2.new(0, 385, 0, 18)
			KeybindLabel.Position = UDim2.new(0, 10, 0, 10)
			KeybindLabel.TextSize = 14
			KeybindLabel.TextXAlignment = Enum.TextXAlignment.Left
			KeybindLabel.BackgroundTransparency = 1
			KeybindLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
			KeybindLabel.TextScaled = true
			KeybindLabel.Text = keybindOptions.Name
			KeybindLabel.Parent = KeybindFrame

			local CurrentKey = Instance.new("TextLabel")
			CurrentKey.Size = UDim2.new(0, 50, 0, 20)
			CurrentKey.Position = UDim2.new(0, 360, 0, 10)
			CurrentKey.Text = keybindOptions.CurrentKeybind
			CurrentKey.TextColor3 = Color3.fromRGB(200, 200, 200)
			CurrentKey.TextSize = 12
			CurrentKey.TextScaled = true
			CurrentKey.BackgroundTransparency = 1
			CurrentKey.TextXAlignment = Enum.TextXAlignment.Right
			CurrentKey.Parent = KeybindFrame

			local KeybindButton = Instance.new("TextButton")
			KeybindButton.Size = UDim2.new(0, 50, 0, 20)
			KeybindButton.Position = UDim2.new(0.88, 0, 0.25, 0)
			KeybindButton.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
			KeybindButton.TextColor3 = Color3.fromRGB(255, 255, 255)
			KeybindButton.Text = "Set"
			KeybindButton.Parent = KeybindFrame

			KeybindButton.MouseButton1Click:Connect(function()
				KeybindButton.Text = "Press Key"
				local connection
				connection = UserInputService.InputBegan:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.Keyboard then
						local newKey = input.KeyCode.Name
						keybindOptions.CurrentKeybind = newKey
						CurrentKey.Text = newKey
						KeybindButton.Text = "Set"
						connection:Disconnect()
					end
				end)
			end)

			UserInputService.InputBegan:Connect(function(input)
				if input.KeyCode.Name == keybindOptions.CurrentKeybind then
					if keybindOptions.HoldToInteract then
						keybindOptions.Callback(true)
					else
						keybindOptions.Callback(false)
					end
				end
			end)

			UserInputService.InputEnded:Connect(function(input)
				if input.KeyCode.Name == keybindOptions.CurrentKeybind and keybindOptions.HoldToInteract then
					keybindOptions.Callback(false)
				end
			end)
		end,
	}
end
return Module
