local CoreGui = game:GetService("CoreGui")
local ScreenGui = Instance.new("ScreenGui")
local UserInputService = game:GetService("UserInputService")

ScreenGui.Parent = CoreGui
ScreenGui.Name = "Facility"

local Container = Instance.new("Frame")
Container.Name = "Container"
Container.Size = UDim2.new(0.35, 0, 0.40, 0)
Container.Position = UDim2.new(0.3, 0, 0.39, 0)
Container.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Container.BackgroundTransparency = 1
Container.Parent = ScreenGui

local NavBar = Instance.new("Frame")
NavBar.Name = "NavBar"
NavBar.Size = UDim2.new(0.24, 0, 0.8, 0)
NavBar.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
NavBar.Position = UDim2.new(0, 0, 0, 0)
NavBar.Parent = Container

local NavBarCorner = Instance.new("UICorner")
NavBarCorner.Parent = NavBar

local NavStroke = Instance.new("UIStroke")
NavStroke.Color = Color3.fromRGB(18, 29, 232)
NavStroke.Thickness = 1
NavStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
NavStroke.Parent = NavBar

local layout = Instance.new("UIListLayout")
layout.Parent = NavBar
layout.Padding = UDim.new(0, 10)
layout.HorizontalAlignment = "Center"

local EnHaut = Instance.new("Frame")
EnHaut.Name = "EnHaut"
EnHaut.Size = UDim2.new(1, 0, 0.1, 0)
EnHaut.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
EnHaut.Position = UDim2.new(0, 0, 0, -50)
EnHaut.Parent = Container

local EnHautCorner = Instance.new("UICorner")
EnHautCorner.Parent = EnHaut

local HautStroke = Instance.new("UIStroke")
HautStroke.Color = Color3.fromRGB(18, 29, 232)
HautStroke.Thickness = 1
HautStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
HautStroke.Parent = EnHaut

local TitleScript = Instance.new("TextLabel")
TitleScript.Name = "Title"
TitleScript.Text = "Facility HUB"
TitleScript.Size = UDim2.new(0, 150, 0, 25)
TitleScript.TextColor3 = Color3.fromRGB(141, 141, 141)
TitleScript.BackgroundTransparency = 1
TitleScript.Font = Enum.Font.SourceSansBold
TitleScript.TextXAlignment = Enum.TextXAlignment.Left
TitleScript.TextScaled = true
TitleScript.Position = UDim2.new(0, 10, 0, 8)

TitleScript.Parent = EnHaut

local dragging = false
local dragStart = nil
local startPos = nil

local function updateInput(input)
	local delta = input.Position - dragStart
	Container.Position =
		UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

EnHaut.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = Container.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
		updateInput(input)
	end
end)

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0.75, 0, 0.8, 0)
MainFrame.Position = UDim2.new(0, 168, 0, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
MainFrame.Parent = Container

local MainFrameCorner = Instance.new("UICorner")
MainFrameCorner.Parent = MainFrame

local MainStroke = Instance.new("UIStroke")
MainStroke.Color = Color3.fromRGB(18, 29, 232)
MainStroke.Thickness = 1
MainStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
MainStroke.Parent = MainFrame

local Element = Instance.new("Frame")
Element.Name = "Element"
Element.Size = UDim2.new(1, 0, 1, 0)
Element.Position = UDim2.new(0, 0, 0, 0)
Element.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Element.Parent = MainFrame

local ElementCorner = Instance.new("UICorner")
ElementCorner.Parent = Element

-- Make CreateTab global
function CreateTab(title)
	local ButtonContainer = Instance.new("Frame")
	ButtonContainer.Name = title
	ButtonContainer.Size = UDim2.new(0, 125, 0, 30)
	ButtonContainer.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	ButtonContainer.BackgroundTransparency = 1
	ButtonContainer.Position = UDim2.new(0.05 + (#NavBar:GetChildren() - 1) * 0.22, 0, 0.1, 0)
	ButtonContainer.Parent = NavBar

	local ContainerCorner = Instance.new("UICorner")
	ContainerCorner.Parent = ButtonContainer

	local Button = Instance.new("TextButton")
	Button.Size = UDim2.new(1, 0, 0, 35)
	Button.Position = UDim2.new(0, 0, 0, 10)
	Button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	Button.TextColor3 = Color3.fromRGB(255, 255, 255)
	Button.Text = title
	Button.Parent = ButtonContainer

	local ButtonCorner = Instance.new("UICorner")
	ButtonCorner.Parent = Button

	local ButtonStroke = Instance.new("UIStroke")
	ButtonStroke.Color = Color3.fromRGB(18, 29, 232)
	ButtonStroke.Thickness = 1
	ButtonStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	ButtonStroke.Parent = Button

	Button.MouseButton1Click:Connect(function()
		print(title .. " clicked!")
		for _, child in ipairs(Element:GetChildren()) do
			if child:IsA("ScrollingFrame") then
				child.Visible = false
			end
		end

		local correspondingFrame = Element:FindFirstChild(title)
		if correspondingFrame then
			correspondingFrame.Visible = true
		end
	end)

	local TabFrame = Instance.new("ScrollingFrame")
	TabFrame.Name = title
	TabFrame.Size = UDim2.new(0.95, 0, 0.95, 0)
	TabFrame.Position = UDim2.new(0.025, 0, 0.025, 0)
	TabFrame.BackgroundTransparency = 1
	TabFrame.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
	TabFrame.Visible = false
	TabFrame.Parent = Element

	TabFrame.ScrollBarThickness = 10
	TabFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
	TabFrame.ScrollingDirection = Enum.ScrollingDirection.Y
	TabFrame.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar

	local TabFrameCorner = Instance.new("UICorner")
	TabFrameCorner.Parent = TabFrame

	local uiPadding = Instance.new("UIPadding")
	uiPadding.PaddingTop = UDim.new(0, 10)
	uiPadding.PaddingLeft = UDim.new(0, 10)
	uiPadding.PaddingRight = UDim.new(0, 10)
	uiPadding.PaddingBottom = UDim.new(0, 10)
	uiPadding.Parent = TabFrame

	local listLayout = Instance.new("UIListLayout")
	listLayout.Parent = TabFrame
	listLayout.FillDirection = Enum.FillDirection.Vertical
	listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	listLayout.VerticalAlignment = Enum.VerticalAlignment.Top
	listLayout.SortOrder = Enum.SortOrder.LayoutOrder
	listLayout.Padding = UDim.new(0, 10)

	return {
		ButtonContainer = ButtonContainer,
		TabFrame = TabFrame,
		CreateToggle = function(toggleOptions)
			local ToggleFrame = Instance.new("Frame")
			ToggleFrame.Name = "Toggle"
			ToggleFrame.Position = UDim2.new(0, 2, 0, 5)
			ToggleFrame.Size = UDim2.new(0.99, 0, 0, 40)
			ToggleFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
			ToggleFrame.Parent = TabFrame

			local ToggleCorner = Instance.new("UICorner")
			ToggleCorner.Parent = ToggleFrame

			local ButtonStroke = Instance.new("UIStroke")
			ButtonStroke.Color = Color3.fromRGB(18, 29, 232)
			ButtonStroke.Thickness = 1
			ButtonStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
			ButtonStroke.Parent = ToggleFrame

			local ToggleLabel = Instance.new("TextLabel")
			ToggleLabel.Size = UDim2.new(0.8, 0, 0, 30)
			ToggleLabel.Position = UDim2.new(0, 5, 0, 5)
			ToggleLabel.BackgroundTransparency = 1
			ToggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
			ToggleLabel.Text = toggleOptions.Name or "Toggle"
			ToggleLabel.Parent = ToggleFrame

			local ToggleButton = Instance.new("TextButton")
			ToggleButton.Size = UDim2.new(0.2, 0, 0.9, 0)
			ToggleButton.Position = UDim2.new(0.8, 0, 0.05, 0)
			ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
			ToggleButton.Text = "OFF"
			ToggleButton.Parent = ToggleFrame

			local ToggleState = false

			ToggleButton.MouseButton1Click:Connect(function()
				ToggleState = not ToggleState
				ToggleButton.Text = ToggleState and "ON" or "OFF"
				ToggleButton.BackgroundColor3 = ToggleState and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)

				if toggleOptions.Callback then
					toggleOptions.Callback(ToggleState)
				end
			end)
		end,
		CreateSlider = function(sliderOptions)
			local SliderFrame = Instance.new("Frame")
			SliderFrame.Name = "Slider"
			SliderFrame.Position = UDim2.new(0, 2, 0, 5)
			SliderFrame.Size = UDim2.new(0.99, 0, 0, 40)
			SliderFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
			SliderFrame.Parent = TabFrame

			local SliderLabel = Instance.new("TextLabel")
			SliderLabel.Size = UDim2.new(0.8, 0, 0, 30)
			SliderLabel.Position = UDim2.new(0, 5, 0, 5)
			SliderLabel.BackgroundTransparency = 1
			SliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
			SliderLabel.Text = sliderOptions.Name or "Slider"
			SliderLabel.Parent = SliderFrame

			local SliderButton = Instance.new("TextButton")
			SliderButton.Size = UDim2.new(0.8, 0, 0.4, 0)
			SliderButton.Position = UDim2.new(0, 5, 0.5, -10)
			SliderButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
			SliderButton.Parent = SliderFrame

			local SliderValue = Instance.new("TextLabel")
			SliderValue.Size = UDim2.new(0.2, 0, 0, 30)
			SliderValue.Position = UDim2.new(0.85, 0, 0, 5)
			SliderValue.BackgroundTransparency = 1
			SliderValue.TextColor3 = Color3.fromRGB(255, 255, 255)
			SliderValue.Text = sliderOptions.Default or "0"
			SliderValue.Parent = SliderFrame

			SliderButton.MouseButton1Down:Connect(function()
				local mouse = UserInputService:GetMouse()
				local minValue = sliderOptions.Min or 0
				local maxValue = sliderOptions.Max or 100
				local currentValue = sliderOptions.Default or 0

				local function updateSlider()
					local delta = mouse.X - SliderButton.AbsolutePosition.X
					local percentage = math.clamp(delta / SliderButton.AbsoluteSize.X, 0, 1)
					currentValue = math.floor(minValue + (percentage * (maxValue - minValue)))

					SliderValue.Text = tostring(currentValue)

					if sliderOptions.Callback then
						sliderOptions.Callback(currentValue)
					end
				end

				updateSlider()

				local connection
				connection = UserInputService.InputChanged:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseMovement then
						updateSlider()
					end
				end)

				UserInputService.InputEnded:Connect(function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						connection:Disconnect()
					end
				end)
			end)
		end,
		CreateKeybind = function(keybindOptions)
			local KeybindFrame = Instance.new("Frame")
			KeybindFrame.Name = "Keybind"
			KeybindFrame.Position = UDim2.new(0, 2, 0, 5)
			KeybindFrame.Size = UDim2.new(0.99, 0, 0, 40)
			KeybindFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
			KeybindFrame.Parent = TabFrame

			local KeybindLabel = Instance.new("TextLabel")
			KeybindLabel.Size = UDim2.new(0.8, 0, 0, 30)
			KeybindLabel.Position = UDim2.new(0, 5, 0, 5)
			KeybindLabel.BackgroundTransparency = 1
			KeybindLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
			KeybindLabel.Text = keybindOptions.Name or "Keybind"
			KeybindLabel.Parent = KeybindFrame

			local KeybindButton = Instance.new("TextButton")
			KeybindButton.Size = UDim2.new(0.8, 0, 0.4, 0)
			KeybindButton.Position = UDim2.new(0, 5, 0.5, -10)
			KeybindButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
			KeybindButton.Text = "Press a key"
			KeybindButton.Parent = KeybindFrame

			local function updateKeybind(newKey)
				KeybindButton.Text = "Key: " .. newKey
				if keybindOptions.Callback then
					keybindOptions.Callback(newKey)
				end
			end

			KeybindButton.MouseButton1Click:Connect(function()
				KeybindButton.Text = "Listening..."
				local connection
				connection = UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
					if not gameProcessedEvent then
						updateKeybind(input.KeyCode.Name)
						connection:Disconnect()
					end
				end)
			end)
		end
	}
end
